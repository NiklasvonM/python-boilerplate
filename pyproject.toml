[tool.poetry]
name = "python-boilerplate"
version = "0.1.0"
description = "Comprehensive Python boilerplate toolkit"
authors = ["Niklas von Moers <niklasvmoers@protonmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "python_boilerplate" }]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
prometheus-client = "^0.20.0"
prometheus-fastapi-instrumentator = "^7.0.0"
pydantic = "^2.8.2"
uvicorn = "^0.30.1"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.9"
lxml = "^5.2.2"
mypy = "^1.10.1"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pytest-html = "^4.1.1"
pytest-metadata = "^3.1.1"
ruff = "^0.5.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]

[tool.mypy]
disallow_any_explicit = false

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # refurb
    "FURB",
]
preview = true # refurb support is still in preview as of 2024-07-26
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
